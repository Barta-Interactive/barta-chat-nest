var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddUserDto.html",[0,0.061,1,1.974]],["body/classes/AddUserDto.html",[0,0.096,1,3.094,2,1.744,3,0.277,4,0.277,5,0.236,6,4.791,7,1.579,8,2.684,9,0.407,10,1.435,11,3.403,12,4.199,13,0.639,14,0.027,15,3.415,16,1.435,17,2.597,18,0.703,19,3.423,20,1.913,21,3.423,22,0.352,23,2.636,24,1.618,25,2.636,26,1.744,27,0.277,28,0.021,29,0.021]],["title/controllers/AppController.html",[30,1.221,31,2.179]],["body/controllers/AppController.html",[0,0.079,3,0.292,4,0.292,5,0.249,9,0.429,14,0.028,16,1.189,18,0.582,22,0.364,27,0.292,28,0.022,29,0.022,30,1.978,31,3.53,32,1.838,33,3.608,34,1.84,35,5.14,36,4.286,37,1.474,38,1.104,39,0.818,40,3.185,41,3.608,42,2.563,43,2.563,44,1.278,45,4.286]],["title/modules/AppModule.html",[46,1.314,47,2.179]],["body/modules/AppModule.html",[0,0.051,3,0.187,4,0.187,5,0.159,7,1.099,13,0.339,14,0.028,22,0.437,27,0.187,28,0.016,29,0.016,31,3.067,32,1.698,39,0.524,40,3.07,41,2.31,46,1.576,47,4.215,48,1.271,49,1.835,50,2.31,51,2.31,52,2.31,53,3.361,54,3.07,55,3.07,56,2.604,57,2.163,58,1.499,59,1.499,60,2.744,61,2.368,62,2.368,63,2.744,64,2.744,65,1.811,66,2.31,67,1.811,68,1.271,69,1.18,70,1.988,71,2.025,72,2.744,73,2.31,74,1.698,75,2.025,76,2.31,77,2.025,78,3.96,79,2.025,80,1.641,81,1.641,82,2.744,83,2.31,84,2.744,85,2.744,86,2.744,87,2.744,88,2.744,89,2.31,90,2.31,91,1.698,92,2.744,93,2.744,94,2.744,95,2.744,96,2.744,97,2.744,98,1.378,99,2.744,100,1.641,101,2.744,102,2.744,103,2.744,104,1.499,105,2.744,106,2.025]],["title/injectables/AppService.html",[40,1.804,107,0.984]],["body/injectables/AppService.html",[0,0.083,3,0.306,4,0.306,5,0.261,9,0.449,14,0.027,18,0.61,22,0.306,27,0.306,28,0.023,29,0.023,34,1.894,35,5.225,37,1.545,38,1.136,39,0.858,40,3.008,44,1.339,107,1.641,108,2.454,109,3.782,110,4.491,111,4.491,112,4.491]],["title/controllers/AuthController.html",[30,1.221,113,1.974]],["body/controllers/AuthController.html",[0,0.088,3,0.192,4,0.192,5,0.164,7,0.784,9,0.283,13,0.499,14,0.028,16,1.311,18,0.642,22,0.398,23,2.189,24,1.125,25,2.189,26,1.212,27,0.275,28,0.017,29,0.017,30,1.045,32,1.212,34,1.392,37,1.625,38,0.835,39,0.54,44,1.408,98,1.419,100,1.69,113,2.419,114,2.086,115,2.086,116,2.827,117,1.953,118,4.045,119,4.045,120,3.406,121,2.827,122,2.827,123,2.827,124,1.88,125,1.625,126,1.513,127,2.419,128,2.031,129,2.827,130,2.589,131,3.406,132,2.827,133,3.406,134,2.827,135,3.747,136,2.827,137,2.827,138,1.69,139,1.69,140,2.38,141,1.69,142,1.31,143,1.69,144,2.372,145,2.086,146,1.31,147,2.38,148,1.874,149,2.086,150,2.38,151,1.544,152,2.38,153,1.045,154,1.735,155,2.38,156,2.38,157,1.392,158,2.38,159,2.38,160,2.38,161,2.38,162,2.38,163,2.38,164,1.69,165,2.38,166,2.38,167,2.38]],["title/guards/AuthGuard.html",[146,1.53,168,2.179]],["body/guards/AuthGuard.html",[0,0.053,3,0.196,4,0.196,5,0.167,9,0.288,13,0.678,14,0.028,18,0.647,22,0.324,27,0.196,28,0.017,29,0.017,34,1.408,37,1.408,38,0.845,39,0.549,42,1.719,44,1.22,91,1.233,107,1.22,117,1.64,124,1.897,125,1.64,126,1.527,142,2.721,146,1.897,153,1.063,154,2.045,157,0.989,169,1.897,170,2.42,171,3.834,172,4.094,173,2.874,174,4.806,175,2.874,176,3.021,177,3.834,178,2.874,179,2.121,180,2.702,181,4.094,182,2.874,183,4.768,184,3.147,185,1.897,186,2.42,187,2.121,188,2.045,189,2.121,190,5.196,191,2.874,192,2.055,193,1.756,194,2.874,195,2.874,196,2.874,197,1.897,198,2.874,199,2.874,200,2.121,201,2.874,202,2.874,203,2.874,204,2.874,205,2.42,206,2.42,207,2.874,208,2.874,209,2.874]],["title/modules/AuthModule.html",[46,1.314,53,1.974]],["body/modules/AuthModule.html",[0,0.066,3,0.243,4,0.243,5,0.207,14,0.028,22,0.415,27,0.243,28,0.019,29,0.019,32,2.04,39,0.682,46,1.892,48,1.655,49,2.203,53,3.784,56,2.828,57,2.598,58,1.952,59,1.952,61,2.844,62,2.844,65,2.358,76,3.008,77,2.636,89,3.008,90,3.008,91,2.04,113,3.197,144,3.064,145,2.636,185,2.358,205,3.008,206,3.008,210,3.008,211,3.572,212,3.008,213,3.572,214,3.572,215,3.572,216,3.572,217,3.572,218,3.572,219,3.572,220,3.572]],["title/injectables/AuthService.html",[107,0.984,144,1.657]],["body/injectables/AuthService.html",[0,0.061,3,0.222,4,0.222,5,0.19,7,0.906,9,0.327,13,0.552,14,0.028,18,0.608,22,0.374,27,0.222,28,0.018,29,0.018,34,1.54,37,1.124,38,1.227,39,0.624,44,0.974,98,2.247,107,1.334,108,1.784,117,1.757,120,3.769,124,1.781,125,1.54,126,1.433,128,1.64,144,2.247,148,2.754,149,2.41,153,1.655,154,1.92,157,1.757,174,5.125,184,2.955,185,2.156,188,2.19,192,1.64,193,1.401,197,2.156,221,2.75,222,3.266,223,3.266,224,4.476,225,5.107,226,3.266,227,3.303,228,3.266,229,4.476,230,3.266,231,3.266,232,3.266,233,1.513,234,3.266,235,3.266,236,3.266]],["title/entities/Chat.html",[69,0.984,237,1.416]],["body/entities/Chat.html",[0,0.079,3,0.208,4,0.208,5,0.177,9,0.305,10,1.185,11,1.826,13,0.738,14,0.028,15,2.015,16,1.615,18,0.791,20,2.153,22,0.208,27,0.291,28,0.018,29,0.018,38,1.202,69,1.273,70,2.68,91,2.289,104,1.668,126,1.368,233,1.415,237,2.114,238,2.253,239,3.253,240,3.636,241,1.836,242,4.149,243,3.636,244,3.636,245,4.188,246,3.053,247,2.015,248,3.053,249,3.523,250,3.053,251,3.053,252,3.597,253,3.523,254,3.053,255,3.053,256,3.053,257,3.053,258,3.152,259,3.597,260,3.597,261,1.415,262,2.253,263,2.015,264,1.415]],["title/guards/ChatAdminOrOwnerGuard.html",[168,2.179,265,1.974]],["body/guards/ChatAdminOrOwnerGuard.html",[0,0.056,3,0.206,4,0.206,5,0.176,7,1.363,9,0.304,11,2.937,13,0.525,14,0.028,18,0.578,22,0.289,27,0.206,28,0.017,29,0.017,34,1.464,37,1.044,39,0.58,42,1.815,44,1.268,69,1.732,70,2.136,91,1.825,107,1.268,117,1.69,124,1.693,125,1.464,126,1.362,141,1.815,142,1.406,153,1.122,157,1.044,169,2.003,171,3.928,176,3.139,177,3.928,179,2.239,180,2.808,187,2.239,188,2.404,189,2.239,192,2.136,193,1.825,200,3.139,233,2.276,241,1.044,265,2.544,266,2.555,267,2.555,268,2.492,269,3.035,270,3.035,271,2.239,272,2.003,273,2.003,274,2.555,275,3.035,276,2.555,277,2.555,278,3.582,279,2.555,280,2.555,281,4.254,282,4.254,283,1.815,284,3.035,285,2.239,286,3.035,287,3.035,288,2.555]],["title/entities/ChatMember.html",[70,1.657,237,1.416]],["body/entities/ChatMember.html",[0,0.085,3,0.229,4,0.229,5,0.195,9,0.336,10,1.267,11,3.1,13,0.686,14,0.027,15,3.014,16,1.438,18,0.704,20,2.217,22,0.229,27,0.311,28,0.019,29,0.019,38,1.07,69,1.002,70,2.792,91,2.385,104,1.837,126,1.462,233,2.402,237,2.224,238,2.481,239,2.219,240,2.481,241,1.913,242,2.831,243,2.481,244,2.481,245,4.176,247,2.219,249,3.671,252,2.831,253,3.422,258,3.369,259,3.844,260,3.844,261,1.558,262,3.369,263,3.014,264,1.558,289,3.362,290,3.362,291,3.362]],["title/controllers/ChatsController.html",[30,1.221,292,1.974]],["body/controllers/ChatsController.html",[0,0.033,1,2.977,3,0.121,4,0.121,5,0.103,7,0.493,9,0.178,13,0.548,14,0.028,16,1.435,18,0.702,22,0.363,27,0.121,28,0.012,29,0.012,30,0.657,32,0.762,34,0.978,37,1.779,38,1.193,39,0.339,43,1.701,44,1.59,69,0.848,115,1.312,117,1.957,124,1.886,125,1.631,126,1.518,127,3.092,128,2.04,138,1.701,139,2.126,142,1.647,143,1.063,146,0.824,151,0.971,153,0.657,154,1.22,157,1.529,164,1.063,184,1.877,188,1.525,192,0.892,193,1.22,197,1.877,241,1.779,264,0.824,265,1.063,268,1.525,272,1.173,283,1.063,292,1.701,293,1.312,294,1.778,295,2.395,296,1.318,297,2.43,298,1.701,299,2.844,300,3.421,301,2.099,302,1.942,303,1.778,304,1.778,305,1.778,306,1.497,307,2.38,308,1.778,309,1.778,310,1.173,311,2.395,312,1.778,313,1.778,314,2.395,315,1.778,316,2.395,317,1.778,318,2.993,319,1.312,320,2.395,321,1.778,322,1.063,323,2.825,324,2.395,325,1.778,326,1.312,327,1.312,328,1.173,329,1.497,330,0.971,331,1.877,332,0.971,333,1.312,334,1.497,335,1.497,336,1.497,337,1.312,338,1.647,339,1.497,340,1.063,341,1.877,342,1.497,343,2.395,344,2.395,345,1.497,346,1.497,347,1.497,348,1.312,349,1.497,350,1.312,351,1.497,352,1.497,353,1.312,354,2.993,355,1.312,356,1.497,357,1.497,358,1.312,359,1.497,360,1.497,361,2.993,362,1.497,363,1.497,364,1.497,365,2.395,366,1.497,367,1.497,368,1.497,369,1.497,370,1.497,371,1.497,372,1.497,373,1.497,374,1.497,375,1.497]],["title/modules/ChatsModule.html",[46,1.314,54,1.804]],["body/modules/ChatsModule.html",[0,0.062,3,0.228,4,0.228,5,0.195,14,0.028,22,0.43,27,0.228,28,0.019,29,0.019,32,1.954,39,0.64,46,1.813,48,1.553,49,2.111,54,3.454,55,2.489,56,2.776,57,2.489,58,1.831,59,1.831,61,2.724,62,2.724,65,2.212,67,2.212,68,1.553,69,0.999,73,2.822,74,1.954,75,2.473,79,2.473,80,2.004,81,2.004,106,2.473,268,2.789,272,2.212,292,3.095,376,2.822,377,2.822,378,2.822,379,3.351,380,3.351,381,3.361,382,3.836,383,3.351,384,2.822,385,3.351]],["title/injectables/ChatsService.html",[107,0.984,268,1.416]],["body/injectables/ChatsService.html",[0,0.039,3,0.143,4,0.143,5,0.122,9,0.211,11,2.667,12,2.396,13,0.655,14,0.028,15,2.618,18,0.744,20,2.323,22,0.361,27,0.143,28,0.013,29,0.013,34,1.117,37,1.826,39,0.402,44,1.582,68,0.975,69,0.968,70,1.631,74,0.903,75,1.553,107,0.968,108,1.15,117,1.935,124,2.112,125,1.826,126,1.699,128,1.991,153,1.201,154,1.393,157,1.534,188,1.701,193,0.903,233,2.232,241,1.826,261,0.975,268,1.393,273,2.943,285,1.553,295,2.735,296,1.505,297,2.667,298,1.942,302,1.774,306,2.735,307,2.419,310,2.144,322,1.942,323,2.994,330,1.15,331,2.144,332,1.15,384,1.772,386,1.772,387,3.248,388,3.248,389,2.105,390,3.916,391,3.339,392,2.105,393,3.248,394,3.248,395,2.105,396,2.105,397,3.248,398,2.105,399,2.105,400,2.105,401,3.248,402,2.105,403,2.105,404,1.553,405,1.772,406,1.772,407,1.553,408,2.105,409,2.105,410,2.105,411,2.105,412,1.772,413,2.105,414,2.105,415,2.105,416,3.248,417,2.105,418,2.105,419,2.105,420,2.105,421,2.105,422,2.105,423,2.105]],["title/classes/CreateChatDto.html",[0,0.061,307,1.657]],["body/classes/CreateChatDto.html",[0,0.094,2,1.684,3,0.267,4,0.267,5,0.228,9,0.393,10,1.404,13,0.691,14,0.027,16,1.404,17,2.54,18,0.76,20,1.871,22,0.344,23,2.593,24,1.562,25,2.593,26,1.684,27,0.267,28,0.021,29,0.021,38,1.22,126,1.62,239,3.695,243,4.13,244,4.13,307,2.54,424,4.978,425,2.897,426,3.926,427,3.926,428,3.926]],["title/classes/CreateMessageDto.html",[0,0.061,429,1.804]],["body/classes/CreateMessageDto.html",[0,0.097,2,1.765,3,0.28,4,0.28,5,0.239,9,0.412,10,1.446,13,0.643,14,0.027,16,1.446,17,2.617,18,0.708,20,1.928,22,0.355,23,2.651,24,1.637,25,2.651,26,1.765,27,0.28,28,0.021,29,0.021,38,1.076,429,2.848,430,4.818,431,3.036,432,4.222,433,4.222,434,4.115,435,4.115]],["title/classes/CreateUserDto.html",[0,0.061,130,1.657]],["body/classes/CreateUserDto.html",[0,0.092,2,1.64,3,0.26,4,0.26,5,0.222,7,1.624,8,2.524,9,0.383,10,1.38,13,0.682,14,0.027,16,1.534,17,2.775,18,0.751,19,3.22,21,3.22,22,0.338,23,2.712,24,1.522,25,2.712,26,1.64,27,0.26,28,0.02,29,0.02,38,1.284,98,2.775,100,3.305,125,1.901,130,2.497,436,4.928,437,3.824]],["title/interfaces/CustomEvent.html",[340,1.974,341,2.179]],["body/interfaces/CustomEvent.html",[0,0.043,1,2.524,3,0.158,4,0.158,5,0.135,7,0.646,9,0.233,10,0.973,13,0.433,14,0.028,22,0.394,27,0.158,28,0.014,29,0.014,30,0.861,38,1.135,39,0.445,43,2.098,44,1.726,69,1.046,117,1.616,127,2.524,138,2.098,139,2.098,142,1.956,143,1.392,146,1.079,151,1.272,153,0.861,154,1.505,157,1.734,164,1.392,184,2.316,188,1.81,192,1.169,193,1.505,197,2.316,241,1.616,264,1.625,265,1.392,268,1.81,272,1.537,283,1.392,292,1.392,293,1.718,297,1.392,300,1.96,302,1.272,307,2.119,311,1.96,314,1.96,316,1.96,318,2.953,320,1.96,323,2.567,324,1.96,326,1.718,327,1.718,328,1.537,329,1.96,330,1.272,331,2.316,332,1.272,333,1.718,334,1.96,335,1.96,336,1.96,337,1.718,338,1.956,339,1.96,340,1.392,341,2.786,342,2.953,343,4.244,344,4.244,345,1.96,346,1.96,347,1.96,348,1.718,349,1.96,350,1.718,351,1.96,352,1.96,353,1.718,354,3.554,355,1.718,356,1.96,357,1.96,358,1.718,359,1.96,360,1.96,361,3.554,362,1.96,363,1.96,364,1.96,365,2.953,366,1.96,367,1.96,368,1.96,369,1.96,370,1.96,371,1.96,372,1.96,373,1.96,374,1.96,375,1.96,438,2.328]],["title/entities/Message.html",[74,1.416,237,1.416]],["body/entities/Message.html",[0,0.055,3,0.203,4,0.203,5,0.173,9,0.298,10,1.166,13,0.748,14,0.028,16,1.603,18,0.785,20,2.137,22,0.203,27,0.203,28,0.017,29,0.017,38,0.867,74,1.802,104,1.629,233,2.254,237,1.802,241,1.674,245,3.487,247,3.212,249,3.212,253,3.212,258,3.101,261,1.382,262,3.898,263,3.814,264,1.382,432,3.59,433,3.59,439,2.511,440,5.778,441,4.866,442,4.866,443,2.982,444,5.283,445,2.982,446,5.283,447,5.778,448,2.982,449,2.982,450,2.982,451,2.982,452,4.202,453,2.982,454,2.982,455,4.202,456,4.202]],["title/controllers/MessageController.html",[30,1.221,457,2.179]],["body/controllers/MessageController.html",[0,0.043,3,0.159,4,0.159,5,0.136,9,0.235,13,0.624,14,0.028,16,1.402,18,0.686,22,0.361,27,0.159,28,0.014,29,0.014,30,0.867,32,1.005,34,1.213,37,1.739,38,1.255,39,0.448,42,1.402,43,1.402,44,1.507,74,1.005,115,1.73,117,2.154,124,2.012,125,1.739,126,1.619,127,3.469,128,2.538,138,2.109,139,2.534,142,2.184,143,1.402,146,1.086,157,1.458,164,1.402,241,1.895,273,2.327,296,1.634,297,2.109,298,2.109,301,2.602,302,2.315,310,1.547,319,1.73,322,1.402,326,1.73,327,1.73,328,1.547,330,1.281,332,1.281,333,1.73,338,1.964,348,1.73,350,3.127,353,1.73,355,1.73,358,1.73,429,3.01,457,2.327,458,1.974,459,1.974,460,2.344,461,2.344,462,3.526,463,2.344,464,3.526,465,2.344,466,3.526,467,2.344,468,3.39,469,3.526,470,2.344,471,1.974,472,2.602,473,2.327,474,2.344,475,2.344,476,2.344,477,2.344,478,2.344,479,2.344,480,2.344,481,2.344]],["title/guards/MessageGuard.html",[168,2.179,473,2.179]],["body/guards/MessageGuard.html",[0,0.059,3,0.216,4,0.216,5,0.184,9,0.318,13,0.542,14,0.028,18,0.596,22,0.299,27,0.216,28,0.018,29,0.018,34,1.51,37,1.092,39,0.606,42,1.899,44,0.947,69,1.618,91,1.883,107,1.309,117,1.731,124,1.747,125,1.51,126,1.406,141,1.899,142,1.471,153,1.174,157,1.092,169,2.096,171,4.006,176,3.239,177,4.006,179,2.343,180,2.898,187,2.343,188,2.328,189,2.343,192,1.594,193,1.362,200,2.343,233,2.331,241,1.092,263,2.096,267,2.674,268,2.528,271,2.343,273,2.096,274,2.674,276,2.674,277,4.798,278,2.674,279,2.674,280,2.674,283,1.899,473,2.898,482,2.674,483,3.176,484,3.176,485,3.176,486,3.176,487,2.674,488,3.176,489,3.176]],["title/modules/MessageModule.html",[46,1.314,55,1.804]],["body/modules/MessageModule.html",[0,0.062,3,0.228,4,0.228,5,0.195,14,0.028,22,0.43,27,0.228,28,0.019,29,0.019,32,1.954,39,0.64,46,1.813,48,1.553,49,2.111,54,2.489,55,3.454,56,2.776,57,2.489,58,1.831,59,1.831,61,2.724,62,2.724,65,2.212,66,2.822,67,2.212,68,1.553,69,1.358,71,2.473,74,1.437,79,2.473,80,2.004,81,2.004,106,2.473,338,3.013,381,3.361,382,3.836,457,3.416,471,2.822,490,2.822,491,2.822,492,2.822,493,3.351,494,3.351,495,3.351,496,2.822,497,3.351]],["title/injectables/MessageService.html",[107,0.984,338,1.53]],["body/injectables/MessageService.html",[0,0.035,3,0.129,4,0.129,5,0.11,9,0.19,12,4.119,13,0.603,14,0.028,18,0.663,20,2.326,22,0.36,27,0.129,28,0.012,29,0.012,34,1.033,37,1.581,39,0.363,43,1.138,44,1.524,68,0.881,69,0.895,71,1.404,74,1.595,80,1.138,81,1.138,91,0.816,107,0.895,108,1.039,117,2.069,124,1.943,125,1.68,126,1.563,128,2.307,141,1.138,153,1.11,154,1.287,157,1.876,188,2.094,192,0.955,193,0.816,233,2.262,241,1.92,261,0.881,271,2.215,283,1.138,285,1.404,288,1.602,296,1.391,297,1.795,298,1.795,301,2.215,302,2.031,310,1.981,319,2.215,322,1.138,328,1.256,330,1.039,332,1.039,338,1.391,390,3.772,391,2.527,404,1.404,405,1.602,406,1.602,407,1.404,412,1.602,429,2.51,432,3.115,433,2.215,459,2.527,468,3.057,472,2.215,487,1.602,496,1.602,498,1.602,499,1.902,500,3.718,501,3.718,502,4.221,503,1.902,504,1.902,505,3.002,506,1.902,507,1.902,508,1.902,509,1.902,510,1.902,511,1.902,512,1.902,513,3.718,514,1.902,515,1.902,516,3.002,517,1.902,518,1.902,519,1.902,520,1.902,521,1.902,522,3.002,523,1.902,524,1.902,525,1.902,526,1.902,527,3.718,528,1.902,529,1.902,530,1.902,531,1.902]],["title/classes/SignInDTO.html",[0,0.061,135,2.179]],["body/classes/SignInDTO.html",[0,0.093,2,1.358,3,0.215,4,0.215,5,0.184,7,0.878,9,0.317,10,1.216,13,0.541,14,0.028,16,1.216,17,2.2,18,0.595,22,0.411,23,2.328,24,1.26,25,2.328,26,1.358,27,0.298,28,0.018,29,0.018,30,1.171,38,1.119,39,0.604,44,1.498,98,2.522,100,3.004,113,1.893,114,2.336,117,1.507,127,1.893,130,2.2,131,2.665,133,2.665,135,3.579,138,1.893,139,1.893,140,2.665,141,1.893,142,1.467,143,1.893,144,2.522,145,2.336,146,1.467,147,2.665,148,2.03,149,2.336,150,2.665,151,1.73,152,2.665,153,1.171,154,1.879,155,2.665,156,2.665,157,1.507,158,2.665,159,2.665,160,2.665,161,2.665,162,2.665,163,2.665,164,1.893,165,2.665,166,2.665,167,2.665,532,3.166,533,3.166]],["title/classes/UpdateChatDto.html",[0,0.061,323,1.804]],["body/classes/UpdateChatDto.html",[0,0.098,2,1.808,3,0.287,4,0.287,5,0.245,9,0.422,10,1.469,13,0.52,14,0.028,16,1.17,17,2.116,18,0.572,22,0.394,23,2.452,24,1.678,25,2.452,26,1.808,27,0.287,28,0.022,29,0.022,38,1.093,240,4.269,264,1.953,296,1.953,307,2.116,323,2.892,331,2.783,425,3.111,534,4.457,535,4.216,536,3.111,537,4.216]],["title/classes/UpdateMessageDto.html",[0,0.061,468,1.974]],["body/classes/UpdateMessageDto.html",[0,0.082,2,1.902,3,0.302,4,0.302,5,0.257,9,0.444,10,1.515,13,0.547,14,0.027,18,0.602,20,2.02,22,0.372,24,1.764,27,0.302,28,0.022,29,0.022,264,2.054,296,2.054,429,2.422,431,3.271,468,3.266,472,3.271,536,3.271,538,4.598,539,5.919,540,4.433,541,4.433]],["title/classes/UpdateUserDto.html",[0,0.061,542,2.179]],["body/classes/UpdateUserDto.html",[0,0.094,2,1.678,3,0.266,4,0.266,5,0.227,7,1.638,8,2.582,9,0.391,10,1.4,13,0.623,14,0.028,16,1.4,17,2.534,18,0.685,22,0.38,23,2.589,24,1.557,25,2.589,26,1.678,27,0.266,28,0.021,29,0.021,38,1.219,130,1.964,151,2.137,264,1.812,296,1.812,536,2.886,542,3.331,543,4.704,544,4.704,545,4.704,546,3.911,547,3.911,548,3.911]],["title/entities/User.html",[7,0.916,237,1.416]],["body/entities/User.html",[0,0.062,3,0.229,4,0.229,5,0.195,7,1.267,9,0.336,10,1.267,13,0.74,14,0.028,16,1.664,18,0.814,20,1.688,22,0.229,27,0.229,28,0.019,29,0.019,38,1.321,91,2.572,98,2.603,100,3.1,104,1.837,125,1.783,237,1.958,241,1.783,245,4.12,247,3.014,249,3.422,253,3.014,261,1.558,544,4.365,545,4.365,549,2.831,550,3.362,551,3.362,552,3.362,553,3.362,554,3.362,555,3.362,556,3.362,557,3.362]],["title/modules/UsersModule.html",[46,1.314,56,1.53]],["body/modules/UsersModule.html",[0,0.074,3,0.27,4,0.27,5,0.231,7,1.102,14,0.028,22,0.404,27,0.27,28,0.021,29,0.021,39,0.758,46,2.028,48,1.84,49,2.361,56,2.96,57,2.784,58,2.17,59,2.17,61,3.048,62,2.375,67,2.622,68,1.84,148,3.091,381,3.761,558,3.344,559,3.344,560,3.344,561,3.972,562,3.972,563,3.344,564,3.972]],["title/injectables/UsersService.html",[107,0.984,148,1.53]],["body/injectables/UsersService.html",[0,0.052,3,0.189,4,0.189,5,0.161,7,1.42,9,0.278,13,0.632,14,0.028,18,0.695,20,1.731,22,0.396,27,0.189,28,0.016,29,0.016,34,1.375,37,1.61,38,0.966,39,0.531,44,1.395,68,1.289,98,2.007,107,1.192,108,1.519,117,2.085,124,2.037,125,1.761,126,1.639,128,2.007,130,2.57,148,1.852,151,2.184,153,1.479,154,1.193,157,1.865,180,2.639,188,1.715,227,2.95,241,1.375,261,1.289,296,1.852,298,2.391,302,2.184,322,2.391,330,1.519,332,1.519,390,3.777,404,2.052,407,2.052,542,3.929,563,2.341,565,2.341,566,2.781,567,2.781,568,3.998,569,3.998,570,2.781,571,3.998,572,2.781,573,2.781,574,2.781,575,2.781,576,2.781,577,3.998,578,2.781,579,2.781,580,2.781,581,2.781,582,2.781]],["title/coverage.html",[583,3.327]],["body/coverage.html",[0,0.11,1,1.668,5,0.162,6,2.348,7,1.422,8,3.095,13,0.344,14,0.028,28,0.016,29,0.016,30,1.895,31,1.841,33,2.348,40,1.523,69,0.831,70,1.4,74,1.196,107,1.618,109,2.348,113,1.668,114,2.956,130,1.4,135,1.841,144,1.4,146,1.292,148,1.292,168,3.095,170,2.348,193,1.196,221,2.348,237,2.198,238,2.956,265,1.668,266,2.348,268,1.196,292,1.668,293,2.956,307,1.4,323,1.523,338,1.292,340,1.668,341,1.841,386,2.348,424,2.348,425,2.956,429,1.523,430,2.348,431,2.956,436,2.348,439,2.348,457,1.841,458,2.348,468,1.668,473,1.841,482,2.348,498,2.348,534,2.348,538,2.348,542,1.841,543,2.348,549,2.348,565,2.348,583,2.058,584,2.789,585,2.789,586,2.789,587,6.711,588,5.125,589,5.125,590,5.957,591,4.006,592,5.428,593,2.348,594,2.789,595,2.348,596,2.789,597,2.789,598,2.789,599,2.789,600,2.789]],["title/dependencies.html",[49,1.84,601,2.32]],["body/dependencies.html",[0,0.094,14,0.028,24,1.562,26,1.684,28,0.021,29,0.021,39,0.75,49,1.819,68,1.819,77,2.897,80,2.348,81,2.348,83,3.306,185,2.592,186,3.306,227,2.897,261,1.819,337,2.897,602,5.597,603,3.926,604,3.926,605,3.926,606,3.926,607,3.926,608,3.926,609,5.059,610,3.926,611,5.059,612,3.926,613,3.926,614,3.926,615,3.926,616,3.926,617,3.926,618,3.926,619,3.926,620,3.926,621,3.926,622,3.926,623,3.926,624,3.926,625,3.926,626,3.926,627,3.926,628,3.926]],["title/miscellaneous/functions.html",[629,2.32,630,3.344]],["body/miscellaneous/functions.html",[9,0.509,14,0.024,28,0.024,29,0.024,593,4.286,595,5.288,629,4.286,630,4.286,631,5.091]],["title/index.html",[9,0.276,632,2.755,633,2.755]],["body/index.html",[14,0.028,28,0.021,29,0.021,69,1.562,583,3.06,634,5.239,635,5.239,636,4.148,637,4.148,638,4.148,639,6.452,640,4.148,641,4.148,642,4.148,643,6.354,644,4.148,645,4.148,646,5.239,647,4.148,648,4.148,649,4.148,650,4.148,651,5.239,652,5.239,653,4.148,654,4.148,655,4.148]],["title/modules.html",[48,2.089]],["body/modules.html",[14,0.023,28,0.023,29,0.023,47,3.086,48,2.166,53,2.796,54,2.554,55,2.554,56,2.166,656,6.44,657,6.44,658,6.44,659,6.44]],["title/overview.html",[660,3.797]],["body/overview.html",[2,1.401,14,0.027,28,0.018,29,0.018,32,1.401,40,2.79,47,4.274,48,1.513,49,2.074,50,2.75,51,2.75,52,2.75,53,3.64,54,3.386,55,3.386,56,2.914,57,2.445,58,1.784,59,1.784,104,1.784,108,1.784,144,2.564,148,2.82,169,2.156,210,2.75,212,2.75,268,2.611,338,2.82,340,1.953,376,2.75,377,2.75,378,2.75,490,2.75,491,2.75,492,2.75,558,2.75,559,2.75,560,2.75,660,2.75,661,4.476,662,4.476,663,3.266,664,3.266,665,3.266]],["title/properties.html",[10,1.102,601,2.32]],["body/properties.html",[10,1.392,14,0.027,28,0.024,29,0.024,239,3.312,666,5.017,667,5.017,668,5.017,669,5.017,670,5.017]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":667,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["0.3.15",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":665,"title":{},"body":{"overview.html":{}}}],["1.4.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["10.0.3",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":664,"title":{},"body":{"overview.html":{}}}],["4",{"_index":662,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":661,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["7.2.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["8",{"_index":663,"title":{},"body":{"overview.html":{}}}],["8.10.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["a.created_at.gettime",{"_index":520,"title":{},"body":{"injectables/MessageService.html":{}}}],["access",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["access_token",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["addmember",{"_index":295,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["addmember(@param('id",{"_index":371,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["addmember(id",{"_index":303,"title":{},"body":{"controllers/ChatsController.html":{}}}],["addmember(userid",{"_index":394,"title":{},"body":{"injectables/ChatsService.html":{}}}],["adduserdto",{"_index":1,"title":{"classes/AddUserDto.html":{}},"body":{"classes/AddUserDto.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{}}}],["adduserdto.admin",{"_index":375,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["adduserdto.user_id",{"_index":373,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["admin",{"_index":11,"title":{},"body":{"classes/AddUserDto.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{}}}],["admin.chat.guard",{"_index":335,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["apiproperty",{"_index":23,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":17,"title":{},"body":{"classes/AddUserDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{}}}],["app",{"_index":641,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":31,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":47,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":40,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["auth.service",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignInDTO.html":{}}}],["auth/auth.guard",{"_index":333,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["auth/auth.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":113,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignInDTO.html":{},"coverage.html":{}}}],["authguard",{"_index":146,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{},"coverage.html":{}}}],["authmodule",{"_index":53,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":670,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":144,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/SignInDTO.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":519,"title":{},"body":{"injectables/MessageService.html":{}}}],["b.created_at.gettime",{"_index":521,"title":{},"body":{"injectables/MessageService.html":{}}}],["barta",{"_index":634,"title":{},"body":{"index.html":{}}}],["based",{"_index":636,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":258,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{}}}],["bcrypt",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":578,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(user.password",{"_index":580,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bio",{"_index":544,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["body",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{}}}],["boolean",{"_index":15,"title":{},"body":{"classes/AddUserDto.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{}}}],["bootstrap",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":659,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":656,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["canactivate(context",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["catch",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["chat",{"_index":69,"title":{"entities/Chat.html":{}},"body":{"modules/AppModule.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"coverage.html":{},"index.html":{}}}],["chat.createquerybuilder('chat",{"_index":410,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chat.dto",{"_index":331,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"classes/UpdateChatDto.html":{}}}],["chat.dto.ts",{"_index":425,"title":{},"body":{"classes/CreateChatDto.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["chat.dto.ts:10",{"_index":426,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.dto.ts:11",{"_index":427,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.dto.ts:7",{"_index":428,"title":{},"body":{"classes/CreateChatDto.html":{}}}],["chat.dto.ts:8",{"_index":535,"title":{},"body":{"classes/UpdateChatDto.html":{}}}],["chat.id",{"_index":374,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["chat.members",{"_index":487,"title":{},"body":{"guards/MessageGuard.html":{},"injectables/MessageService.html":{}}}],["chat.members.find((member",{"_index":284,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["chat.members.map((mem",{"_index":488,"title":{},"body":{"guards/MessageGuard.html":{}}}],["chat.members.push(newchatmember",{"_index":422,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chat.ownerid",{"_index":283,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{}}}],["chat_id",{"_index":432,"title":{},"body":{"classes/CreateMessageDto.html":{},"entities/Message.html":{},"injectables/MessageService.html":{}}}],["chatadminorownerguard",{"_index":265,"title":{"guards/ChatAdminOrOwnerGuard.html":{}},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{}}}],["chatid",{"_index":273,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{}}}],["chatmember",{"_index":70,"title":{"entities/ChatMember.html":{}},"body":{"modules/AppModule.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{},"coverage.html":{}}}],["chatmember.admin",{"_index":286,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["chatrepository",{"_index":500,"title":{},"body":{"injectables/MessageService.html":{}}}],["chats",{"_index":294,"title":{},"body":{"controllers/ChatsController.html":{}}}],["chats.controller",{"_index":383,"title":{},"body":{"modules/ChatsModule.html":{}}}],["chats.service",{"_index":272,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"interfaces/CustomEvent.html":{}}}],["chats/chats.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{}}}],["chats/chats.service",{"_index":485,"title":{},"body":{"guards/MessageGuard.html":{}}}],["chats/entities/chat.entity",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{}}}],["chatscontroller",{"_index":292,"title":{"controllers/ChatsController.html":{}},"body":{"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{}}}],["chatsmodule",{"_index":54,"title":{"modules/ChatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules.html":{},"overview.html":{}}}],["chatsrepository",{"_index":393,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chatsservice",{"_index":268,"title":{"injectables/ChatsService.html":{}},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":281,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["class",{"_index":0,"title":{"classes/AddUserDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddUserDto.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_chatsmodule",{"_index":376,"title":{},"body":{"modules/ChatsModule.html":{},"overview.html":{}}}],["cluster_chatsmodule_exports",{"_index":377,"title":{},"body":{"modules/ChatsModule.html":{},"overview.html":{}}}],["cluster_chatsmodule_imports",{"_index":379,"title":{},"body":{"modules/ChatsModule.html":{}}}],["cluster_chatsmodule_providers",{"_index":378,"title":{},"body":{"modules/ChatsModule.html":{},"overview.html":{}}}],["cluster_messagemodule",{"_index":490,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_exports",{"_index":492,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_imports",{"_index":493,"title":{},"body":{"modules/MessageModule.html":{}}}],["cluster_messagemodule_providers",{"_index":491,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":558,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":560,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":559,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":245,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":247,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{}}}],["column({type",{"_index":251,"title":{},"body":{"entities/Chat.html":{}}}],["column({unique",{"_index":555,"title":{},"body":{"entities/User.html":{}}}],["configmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["const",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"injectables/UsersService.html":{}}}],["constructor(chatsrepository",{"_index":389,"title":{},"body":{"injectables/ChatsService.html":{}}}],["constructor(chatsservice",{"_index":267,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["constructor(jwtservice",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(messagerepository",{"_index":499,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{}}}],["constructor(usersrepository",{"_index":566,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["controller",{"_index":30,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"controllers/MessageController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{},"coverage.html":{}}}],["controller('auth",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["controller('chats",{"_index":345,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["controller('message",{"_index":475,"title":{},"body":{"controllers/MessageController.html":{}}}],["controllers",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"controllers/MessageController.html":{},"modules/MessageModule.html":{},"overview.html":{}}}],["coverage",{"_index":583,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":296,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":348,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["create(createchatdto",{"_index":306,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["create(createmessagedto",{"_index":459,"title":{},"body":{"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["create(user",{"_index":569,"title":{},"body":{"injectables/UsersService.html":{}}}],["createchatdto",{"_index":307,"title":{"classes/CreateChatDto.html":{}},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"interfaces/CustomEvent.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["createchatdto.ownerid",{"_index":349,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["created",{"_index":407,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["created_at",{"_index":441,"title":{},"body":{"entities/Message.html":{}}}],["createdatecolumn",{"_index":455,"title":{},"body":{"entities/Message.html":{}}}],["createdatecolumn({type",{"_index":445,"title":{},"body":{"entities/Message.html":{}}}],["createmessagedto",{"_index":429,"title":{"classes/CreateMessageDto.html":{}},"body":{"classes/CreateMessageDto.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["createmessagedto.chat_id",{"_index":511,"title":{},"body":{"injectables/MessageService.html":{}}}],["createmessagedto.message_text",{"_index":512,"title":{},"body":{"injectables/MessageService.html":{}}}],["createuserdto",{"_index":130,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["current_timestamp(6",{"_index":447,"title":{},"body":{"entities/Message.html":{}}}],["customevent",{"_index":341,"title":{"interfaces/CustomEvent.html":{}},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{}}}],["data",{"_index":344,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["database",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":444,"title":{},"body":{"entities/Message.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["default",{"_index":262,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":328,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["delete('/:id",{"_index":320,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["delete(':id",{"_index":466,"title":{},"body":{"controllers/MessageController.html":{}}}],["deletechat",{"_index":387,"title":{},"body":{"injectables/ChatsService.html":{}}}],["deletechat(id",{"_index":397,"title":{},"body":{"injectables/ChatsService.html":{}}}],["deny",{"_index":278,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":239,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"classes/CreateChatDto.html":{},"properties.html":{}}}],["development",{"_index":642,"title":{},"body":{"index.html":{}}}],["displaypicture",{"_index":240,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"classes/UpdateChatDto.html":{}}}],["documentation",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"classes/SignInDTO.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["dto.ts",{"_index":8,"title":{},"body":{"classes/AddUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":19,"title":{},"body":{"classes/AddUserDto.html":{},"classes/CreateUserDto.html":{}}}],["dto.ts:11",{"_index":547,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["dto.ts:13",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:7",{"_index":21,"title":{},"body":{"classes/AddUserDto.html":{},"classes/CreateUserDto.html":{}}}],["dto.ts:8",{"_index":546,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["dto/add",{"_index":334,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["dto/create",{"_index":330,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":332,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":653,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["entities",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/chat.entity",{"_index":384,"title":{},"body":{"modules/ChatsModule.html":{},"injectables/ChatsService.html":{}}}],["entities/message.entity",{"_index":496,"title":{},"body":{"modules/MessageModule.html":{},"injectables/MessageService.html":{}}}],["entities/user.entity",{"_index":563,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":237,"title":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{}},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{},"coverage.html":{}}}],["event",{"_index":343,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["eventdata",{"_index":368,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["eventemitter2",{"_index":502,"title":{},"body":{"injectables/MessageService.html":{}}}],["eventemittermodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{}}}],["eventemittermodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{}}}],["executioncontext",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["expiresin",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":381,"title":{},"body":{"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":264,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{}}}],["extracttokenfromheader",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":263,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"guards/MessageGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":297,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["findall(@param('chat_id",{"_index":477,"title":{},"body":{"controllers/MessageController.html":{}}}],["findall(chat_id",{"_index":505,"title":{},"body":{"injectables/MessageService.html":{}}}],["findall(chatid",{"_index":461,"title":{},"body":{"controllers/MessageController.html":{}}}],["findone",{"_index":298,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":353,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["findone(id",{"_index":310,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["findone(username",{"_index":571,"title":{},"body":{"injectables/UsersService.html":{}}}],["forwardref",{"_index":382,"title":{},"body":{"modules/ChatsModule.html":{},"modules/MessageModule.html":{}}}],["found",{"_index":277,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["function",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":630,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:chat_id",{"_index":462,"title":{},"body":{"controllers/MessageController.html":{}}}],["get('/:id",{"_index":311,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["get('/mine",{"_index":314,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["get(':id",{"_index":464,"title":{},"body":{"controllers/MessageController.html":{}}}],["get('profile",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["gethello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":414,"title":{},"body":{"injectables/ChatsService.html":{}}}],["getmine",{"_index":299,"title":{},"body":{"controllers/ChatsController.html":{}}}],["getmine(@request",{"_index":346,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["getmine(req",{"_index":313,"title":{},"body":{"controllers/ChatsController.html":{}}}],["getparticipated",{"_index":388,"title":{},"body":{"injectables/ChatsService.html":{}}}],["getparticipated(user_id",{"_index":401,"title":{},"body":{"injectables/ChatsService.html":{}}}],["getprofile",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["getprofile(req",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":632,"title":{"index.html":{}},"body":{}}],["global",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard",{"_index":168,"title":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{},"overview.html":{}}}],["handlers",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hello",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["host",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["httpcode(httpstatus.ok",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["httpcode(httpstatus.ok)@post('login",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":271,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{}}}],["httpexception('invalid",{"_index":279,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["httpexception('you",{"_index":287,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["httpstatus",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{}}}],["httpstatus.forbidden",{"_index":288,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"injectables/MessageService.html":{}}}],["httpstatus.not_found",{"_index":280,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["id",{"_index":241,"title":{},"body":{"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["import",{"_index":22,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChatsService.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"injectables/ChatsService.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChatsService.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":404,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(chat",{"_index":405,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["injectrepository(message",{"_index":406,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["injectrepository(user",{"_index":574,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":638,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":640,"title":{},"body":{"index.html":{}}}],["interface",{"_index":340,"title":{"interfaces/CustomEvent.html":{}},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":438,"title":{},"body":{"interfaces/CustomEvent.html":{}}}],["isglobal",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["ismatch",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":25,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{}}}],["jointable",{"_index":259,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{}}}],["json",{"_index":252,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{}}}],["jwtmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["leftjoinandselect('chat.members",{"_index":411,"title":{},"body":{"injectables/ChatsService.html":{}}}],["license",{"_index":668,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["listener",{"_index":361,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["manytomany",{"_index":260,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{}}}],["map",{"_index":336,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["matching",{"_index":29,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mem.userid",{"_index":489,"title":{},"body":{"guards/MessageGuard.html":{}}}],["member",{"_index":412,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["member.admin",{"_index":530,"title":{},"body":{"injectables/MessageService.html":{}}}],["member.userid",{"_index":285,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["members",{"_index":242,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{}}}],["message",{"_index":74,"title":{"entities/Message.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["message.chat_id",{"_index":529,"title":{},"body":{"injectables/MessageService.html":{}}}],["message.controller",{"_index":495,"title":{},"body":{"modules/MessageModule.html":{}}}],["message.dto",{"_index":472,"title":{},"body":{"controllers/MessageController.html":{},"injectables/MessageService.html":{},"classes/UpdateMessageDto.html":{}}}],["message.dto.ts",{"_index":431,"title":{},"body":{"classes/CreateMessageDto.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["message.dto.ts:10",{"_index":434,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["message.dto.ts:5",{"_index":540,"title":{},"body":{"classes/UpdateMessageDto.html":{}}}],["message.dto.ts:7",{"_index":435,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["message.guard",{"_index":474,"title":{},"body":{"controllers/MessageController.html":{}}}],["message.service",{"_index":471,"title":{},"body":{"controllers/MessageController.html":{},"modules/MessageModule.html":{}}}],["message.userid",{"_index":526,"title":{},"body":{"injectables/MessageService.html":{}}}],["message/entities/message.entity",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{}}}],["message/message.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{}}}],["message/message.service",{"_index":339,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["message_id",{"_index":539,"title":{},"body":{"classes/UpdateMessageDto.html":{}}}],["message_text",{"_index":433,"title":{},"body":{"classes/CreateMessageDto.html":{},"entities/Message.html":{},"injectables/MessageService.html":{}}}],["messagecontroller",{"_index":457,"title":{"controllers/MessageController.html":{}},"body":{"controllers/MessageController.html":{},"modules/MessageModule.html":{},"coverage.html":{}}}],["messagecreated",{"_index":365,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["messageemitter",{"_index":501,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageevent",{"_index":342,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["messageguard",{"_index":473,"title":{"guards/MessageGuard.html":{}},"body":{"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"coverage.html":{}}}],["messagemodule",{"_index":55,"title":{"modules/MessageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules.html":{},"overview.html":{}}}],["messagerepository",{"_index":391,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["messages",{"_index":516,"title":{},"body":{"injectables/MessageService.html":{}}}],["messages.sort((a",{"_index":518,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":338,"title":{"injectables/MessageService.html":{}},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["microservice",{"_index":637,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":629,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":646,"title":{},"body":{"index.html":{}}}],["module",{"_index":46,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateUserDto.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":635,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["newchatmember",{"_index":419,"title":{},"body":{"injectables/ChatsService.html":{}}}],["newchatmember.admin",{"_index":420,"title":{},"body":{"injectables/ChatsService.html":{}}}],["newchatmember.userid",{"_index":421,"title":{},"body":{"injectables/ChatsService.html":{}}}],["newmessage",{"_index":363,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["nullable",{"_index":253,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/AddUserDto.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"entities/Message.html":{},"injectables/MessageService.html":{},"classes/UpdateMessageDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["number(req.user.userid",{"_index":350,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["object",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["observable",{"_index":318,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["observable>((subscriber",{"_index":360,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["onupdate",{"_index":452,"title":{},"body":{"entities/Message.html":{}}}],["optional",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":660,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":282,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["ownerid",{"_index":243,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"classes/CreateChatDto.html":{}}}],["package",{"_index":601,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":327,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["param('id",{"_index":355,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["parameters",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.database_port",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["partialtype",{"_index":536,"title":{},"body":{"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createchatdto",{"_index":537,"title":{},"body":{"classes/UpdateChatDto.html":{}}}],["partialtype(createmessagedto",{"_index":541,"title":{},"body":{"classes/UpdateMessageDto.html":{}}}],["partialtype(createuserdto",{"_index":548,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"entities/User.html":{}}}],["patch",{"_index":326,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["patch('/:id",{"_index":324,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["patch('/add/:id",{"_index":370,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["patch(':id",{"_index":469,"title":{},"body":{"controllers/MessageController.html":{}}}],["payload",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["permissions",{"_index":531,"title":{},"body":{"injectables/MessageService.html":{}}}],["pg",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["pipe(map((eventdata",{"_index":367,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["port",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{}}}],["post('login",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["post('register",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["postgres",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"controllers/MessageController.html":{}}}],["primarygeneratedcolumn",{"_index":249,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"entities/Message.html":{},"entities/User.html":{}}}],["private",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_name",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_password",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_url",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_username",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["production",{"_index":648,"title":{},"body":{"index.html":{}}}],["profilepic",{"_index":545,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["promise",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AddUserDto.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":440,"title":{},"body":{"entities/Message.html":{}}}],["publishupdates",{"_index":300,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["reflect",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["register(registerdto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["remove",{"_index":301,"title":{},"body":{"controllers/ChatsController.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["remove(@param('id",{"_index":358,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{}}}],["remove(id",{"_index":319,"title":{},"body":{"controllers/ChatsController.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{}}}],["repository",{"_index":390,"title":{},"body":{"injectables/ChatsService.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{}}}],["req.user.userid",{"_index":356,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["request",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"classes/SignInDTO.html":{}}}],["request.headers.authorization?.split",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.params.id",{"_index":274,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["request.user.id",{"_index":275,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["request.user.userid",{"_index":486,"title":{},"body":{"guards/MessageGuard.html":{}}}],["request['user",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":643,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":337,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"dependencies.html":{}}}],["salt",{"_index":577,"title":{},"body":{"injectables/UsersService.html":{}}}],["saved",{"_index":513,"title":{},"body":{"injectables/MessageService.html":{}}}],["secret",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["signin",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["signin(signindto",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":135,"title":{"classes/SignInDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{},"coverage.html":{}}}],["signindto.password",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["signoptions",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["socket.io",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../main.ts",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":533,"title":{},"body":{"classes/SignInDTO.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":532,"title":{},"body":{"classes/SignInDTO.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:47",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:14",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:32",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/chats/admin.chat.guard.ts",{"_index":266,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"coverage.html":{}}}],["src/chats/admin.chat.guard.ts:11",{"_index":269,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["src/chats/admin.chat.guard.ts:13",{"_index":270,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{}}}],["src/chats/chats.controller.ts",{"_index":293,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"coverage.html":{}}}],["src/chats/chats.controller.ts:37",{"_index":315,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:42",{"_index":308,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:48",{"_index":309,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:53",{"_index":312,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:58",{"_index":325,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:71",{"_index":321,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:76",{"_index":317,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:98",{"_index":305,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.module.ts",{"_index":380,"title":{},"body":{"modules/ChatsModule.html":{}}}],["src/chats/chats.service.ts",{"_index":386,"title":{},"body":{"injectables/ChatsService.html":{},"coverage.html":{}}}],["src/chats/chats.service.ts:10",{"_index":392,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:17",{"_index":396,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:22",{"_index":402,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:31",{"_index":399,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:35",{"_index":400,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:39",{"_index":403,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:43",{"_index":398,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:47",{"_index":395,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/dto/add",{"_index":6,"title":{},"body":{"classes/AddUserDto.html":{},"coverage.html":{}}}],["src/chats/dto/create",{"_index":424,"title":{},"body":{"classes/CreateChatDto.html":{},"coverage.html":{}}}],["src/chats/dto/update",{"_index":534,"title":{},"body":{"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["src/chats/entities/chat.entity.ts",{"_index":238,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"coverage.html":{}}}],["src/chats/entities/chat.entity.ts:13",{"_index":290,"title":{},"body":{"entities/ChatMember.html":{}}}],["src/chats/entities/chat.entity.ts:15",{"_index":291,"title":{},"body":{"entities/ChatMember.html":{}}}],["src/chats/entities/chat.entity.ts:17",{"_index":289,"title":{},"body":{"entities/ChatMember.html":{}}}],["src/chats/entities/chat.entity.ts:23",{"_index":250,"title":{},"body":{"entities/Chat.html":{}}}],["src/chats/entities/chat.entity.ts:25",{"_index":257,"title":{},"body":{"entities/Chat.html":{}}}],["src/chats/entities/chat.entity.ts:27",{"_index":256,"title":{},"body":{"entities/Chat.html":{}}}],["src/chats/entities/chat.entity.ts:29",{"_index":246,"title":{},"body":{"entities/Chat.html":{}}}],["src/chats/entities/chat.entity.ts:31",{"_index":248,"title":{},"body":{"entities/Chat.html":{}}}],["src/chats/entities/chat.entity.ts:35",{"_index":255,"title":{},"body":{"entities/Chat.html":{}}}],["src/main.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/message/dto/create",{"_index":430,"title":{},"body":{"classes/CreateMessageDto.html":{},"coverage.html":{}}}],["src/message/dto/update",{"_index":538,"title":{},"body":{"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["src/message/entities/message.entity.ts",{"_index":439,"title":{},"body":{"entities/Message.html":{},"coverage.html":{}}}],["src/message/entities/message.entity.ts:13",{"_index":449,"title":{},"body":{"entities/Message.html":{}}}],["src/message/entities/message.entity.ts:15",{"_index":454,"title":{},"body":{"entities/Message.html":{}}}],["src/message/entities/message.entity.ts:17",{"_index":450,"title":{},"body":{"entities/Message.html":{}}}],["src/message/entities/message.entity.ts:19",{"_index":443,"title":{},"body":{"entities/Message.html":{}}}],["src/message/entities/message.entity.ts:24",{"_index":448,"title":{},"body":{"entities/Message.html":{}}}],["src/message/entities/message.entity.ts:31",{"_index":453,"title":{},"body":{"entities/Message.html":{}}}],["src/message/message.controller.ts",{"_index":458,"title":{},"body":{"controllers/MessageController.html":{},"coverage.html":{}}}],["src/message/message.controller.ts:24",{"_index":460,"title":{},"body":{"controllers/MessageController.html":{}}}],["src/message/message.controller.ts:32",{"_index":463,"title":{},"body":{"controllers/MessageController.html":{}}}],["src/message/message.controller.ts:37",{"_index":465,"title":{},"body":{"controllers/MessageController.html":{}}}],["src/message/message.controller.ts:42",{"_index":470,"title":{},"body":{"controllers/MessageController.html":{}}}],["src/message/message.controller.ts:55",{"_index":467,"title":{},"body":{"controllers/MessageController.html":{}}}],["src/message/message.guard.ts",{"_index":482,"title":{},"body":{"guards/MessageGuard.html":{},"coverage.html":{}}}],["src/message/message.guard.ts:11",{"_index":483,"title":{},"body":{"guards/MessageGuard.html":{}}}],["src/message/message.guard.ts:14",{"_index":484,"title":{},"body":{"guards/MessageGuard.html":{}}}],["src/message/message.module.ts",{"_index":494,"title":{},"body":{"modules/MessageModule.html":{}}}],["src/message/message.service.ts",{"_index":498,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/message/message.service.ts:11",{"_index":503,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/message.service.ts:20",{"_index":504,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/message.service.ts:31",{"_index":506,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/message.service.ts:39",{"_index":507,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/message.service.ts:45",{"_index":509,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/message.service.ts:61",{"_index":508,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/users/dto/create",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":543,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":549,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":556,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":553,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":550,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":554,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":551,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":552,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.module.ts",{"_index":561,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":565,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":567,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":572,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":573,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":570,"title":{},"body":{"injectables/UsersService.html":{}}}],["sse",{"_index":329,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["sse('/:chatid/getupdates",{"_index":316,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["start",{"_index":644,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":647,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":649,"title":{},"body":{"index.html":{}}}],["started",{"_index":633,"title":{"index.html":{}},"body":{}}],["statements",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["subscriber.next",{"_index":362,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["support",{"_index":657,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":658,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":652,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":655,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":654,"title":{},"body":{"index.html":{}}}],["tests",{"_index":651,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(signindto.username",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["this.chatrepository.findoneby",{"_index":528,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.chatsrepository.create(createchatdto",{"_index":408,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.delete",{"_index":418,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.find",{"_index":415,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.findoneby",{"_index":416,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.save(chat",{"_index":423,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.save(created",{"_index":409,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.update",{"_index":417,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsservice.addmember",{"_index":372,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.create(createchatdto",{"_index":351,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.deletechat(+id",{"_index":359,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.findall",{"_index":352,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.findone(+id",{"_index":354,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.findone(chatid",{"_index":276,"title":{},"body":{"guards/ChatAdminOrOwnerGuard.html":{},"guards/MessageGuard.html":{}}}],["this.chatsservice.getparticipated(number(req.user.userid",{"_index":347,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.chatsservice.update(+id",{"_index":357,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.extracttokenfromheader(request",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.messageemitter.emit('messagecreated",{"_index":515,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.create",{"_index":510,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.findby",{"_index":517,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.findoneby",{"_index":522,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.remove(message",{"_index":527,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.save(created",{"_index":514,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagerepository.update",{"_index":523,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messageservice.create",{"_index":476,"title":{},"body":{"controllers/MessageController.html":{}}}],["this.messageservice.findall(number(chatid",{"_index":478,"title":{},"body":{"controllers/MessageController.html":{}}}],["this.messageservice.findone(+id",{"_index":479,"title":{},"body":{"controllers/MessageController.html":{}}}],["this.messageservice.messageemitter.addlistener",{"_index":364,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.messageservice.messageemitter.removelistener",{"_index":366,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["this.messageservice.remove(+id",{"_index":481,"title":{},"body":{"controllers/MessageController.html":{}}}],["this.messageservice.update",{"_index":480,"title":{},"body":{"controllers/MessageController.html":{}}}],["this.userservice.create(registerdto",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["this.userservice.findone(req.user.username",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["this.usersrepository.create(user",{"_index":581,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby",{"_index":575,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(created",{"_index":582,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update",{"_index":576,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findone(username",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{}}}],["timestamp",{"_index":446,"title":{},"body":{"entities/Message.html":{}}}],["title",{"_index":244,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"classes/CreateChatDto.html":{}}}],["token",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["transformer",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"entities/User.html":{}}}],["true})@manytomany(undefined)@jointable",{"_index":254,"title":{},"body":{"entities/Chat.html":{}}}],["try",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ttl",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"entities/Message.html":{},"controllers/MessageController.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":261,"title":{},"body":{"entities/Chat.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{},"entities/Message.html":{},"injectables/MessageService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([chat",{"_index":385,"title":{},"body":{"modules/ChatsModule.html":{}}}],["typeormmodule.forfeature([message",{"_index":497,"title":{},"body":{"modules/MessageModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":564,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unique",{"_index":557,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":650,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":669,"title":{},"body":{"properties.html":{}}}],["update",{"_index":302,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":322,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/MessageController.html":{},"injectables/MessageService.html":{},"injectables/UsersService.html":{}}}],["updatechatdto",{"_index":323,"title":{"classes/UpdateChatDto.html":{}},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/CustomEvent.html":{},"classes/UpdateChatDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":442,"title":{},"body":{"entities/Message.html":{}}}],["updatedatecolumn",{"_index":456,"title":{},"body":{"entities/Message.html":{}}}],["updatedatecolumn({type",{"_index":451,"title":{},"body":{"entities/Message.html":{}}}],["updatemessagedto",{"_index":468,"title":{"classes/UpdateMessageDto.html":{}},"body":{"controllers/MessageController.html":{},"injectables/MessageService.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["updatemessagedto.message_id",{"_index":524,"title":{},"body":{"injectables/MessageService.html":{}}}],["updatemessagedto.message_text",{"_index":525,"title":{},"body":{"injectables/MessageService.html":{}}}],["updateuserdto",{"_index":542,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useguards",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{}}}],["useguards(authguard",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{},"controllers/MessageController.html":{},"classes/SignInDTO.html":{}}}],["useguards(authguard)@get('profile",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(chatadminorownerguard",{"_index":369,"title":{},"body":{"controllers/ChatsController.html":{},"interfaces/CustomEvent.html":{}}}],["useguards(chatadminorownerguard)@patch('/add/:id",{"_index":304,"title":{},"body":{"controllers/ChatsController.html":{}}}],["user",{"_index":7,"title":{"entities/User.html":{}},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"controllers/ChatsController.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomEvent.html":{},"classes/SignInDTO.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.id",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":579,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.username",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.password",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":12,"title":{},"body":{"classes/AddUserDto.html":{},"injectables/ChatsService.html":{},"injectables/MessageService.html":{}}}],["userid",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"entities/Chat.html":{},"guards/ChatAdminOrOwnerGuard.html":{},"entities/ChatMember.html":{},"injectables/ChatsService.html":{},"entities/Message.html":{},"guards/MessageGuard.html":{},"injectables/MessageService.html":{}}}],["username",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":562,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["users/entities/user.entity",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{}}}],["users/users.service",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDTO.html":{}}}],["userservice",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDTO.html":{}}}],["usersmodule",{"_index":56,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":568,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":148,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":26,"title":{},"body":{"classes/AddUserDto.html":{},"controllers/AuthController.html":{},"classes/CreateChatDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDTO.html":{},"classes/UpdateChatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["version",{"_index":666,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":645,"title":{},"body":{"index.html":{}}}],["we're",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["where('chat.ownerid",{"_index":413,"title":{},"body":{"injectables/ChatsService.html":{}}}],["world",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":639,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatsModule.html":{},"modules/MessageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddUserDto.html":{"url":"classes/AddUserDto.html","title":"class - AddUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/dto/add-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/add-user-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/add-user-dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class AddUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  user_id: number;\n  @ApiProperty()\n  @IsNotEmpty()\n  admin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChatsModule\n\nChatsModule\n\nAppModule -->\n\nChatsModule->AppModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ChatsModule\n                        \n                        \n                            MessageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ChatsModule } from './chats/chats.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Chat, ChatMember } from './chats/entities/chat.entity';\nimport { User } from './users/entities/user.entity';\nimport { MessageModule } from './message/message.module';\nimport { Message } from './message/entities/message.entity';\nimport { ConfigModule } from '@nestjs/config';\nimport * as process from 'process';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    AuthModule,\n    UsersModule,\n    ChatsModule,\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DATABASE_URL,\n      port: parseInt(process.env.DATABASE_PORT),\n      username: process.env.DATABASE_USERNAME,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_NAME,\n      entities: [User, Chat, ChatMember, Message],\n      synchronize: true,\n    }),\n    EventEmitterModule.forRoot(),\n    MessageModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(signInDto: SignInDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Get,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UsersService } from '../users/users.service';\nimport { CreateUserDto } from '../users/dto/create-user-dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class SignInDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private userService: UsersService,\n  ) {}\n\n  @Post('register')\n  async register(@Body() registerDto: CreateUserDto) {\n    return await this.userService.create(registerDto);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: SignInDTO) {\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return await this.userService.findOne(req.user.username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signIn(username: string, pass: string) {\n    const user = await this.usersService.findOne(username);\n    const isMatch = await bcrypt.compare(pass, user?.password);\n    if (!isMatch) {\n      throw new UnauthorizedException();\n    }\n    const payload = { username: user.username, userId: user.id };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Chat.html":{"url":"entities/Chat.html","title":"entity - Chat","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/entities/chat.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                displayPicture\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                ownerId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChatMember[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json', nullable: true})@ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  PrimaryGeneratedColumn,\n  Entity,\n  BaseEntity,\n  JoinTable,\n  ManyToMany,\n} from 'typeorm';\n\n@Entity()\nexport class ChatMember {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  userId: number;\n  @Column({ nullable: true, default: false })\n  admin?: boolean;\n}\n\n@Entity()\nexport class Chat extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  title: string;\n  @Column()\n  ownerId: number;\n  @Column()\n  description: string;\n  @Column({ nullable: true })\n  displayPicture?: string;\n  @Column({ type: 'json', nullable: true })\n  @ManyToMany(() => ChatMember)\n  @JoinTable()\n  members: ChatMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ChatAdminOrOwnerGuard.html":{"url":"guards/ChatAdminOrOwnerGuard.html","title":"guard - ChatAdminOrOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ChatAdminOrOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/chats/admin.chat.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(chatsService: ChatsService)\n                    \n                \n                        \n                            \n                                Defined in src/chats/admin.chat.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatsService\n                                                  \n                                                        \n                                                                        ChatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/admin.chat.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { ChatsService } from './chats.service';\n\n@Injectable()\nexport class ChatAdminOrOwnerGuard implements CanActivate {\n  constructor(private chatsService: ChatsService) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const chatId = request.params.id;\n    const userId = request.user.id;\n\n    const chat = await this.chatsService.findOne(chatId);\n\n    if (!chat) {\n      // chat not found, deny access\n      throw new HttpException('Invalid chat id', HttpStatus.NOT_FOUND);\n    }\n\n    // check if user is chat owner\n    if (chat.ownerId === userId) {\n      return true;\n    }\n\n    // check if user is a chat admin\n    const chatMember = chat.members.find((member) => member.userId === userId);\n    if (chatMember && chatMember.admin) {\n      return true;\n    }\n\n    // user is not owner or admin, deny access\n    throw new HttpException('You are not an admin', HttpStatus.FORBIDDEN);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ChatMember.html":{"url":"entities/ChatMember.html","title":"entity - ChatMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ChatMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/entities/chat.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                admin\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/entities/chat.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  PrimaryGeneratedColumn,\n  Entity,\n  BaseEntity,\n  JoinTable,\n  ManyToMany,\n} from 'typeorm';\n\n@Entity()\nexport class ChatMember {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  userId: number;\n  @Column({ nullable: true, default: false })\n  admin?: boolean;\n}\n\n@Entity()\nexport class Chat extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  title: string;\n  @Column()\n  ownerId: number;\n  @Column()\n  description: string;\n  @Column({ nullable: true })\n  displayPicture?: string;\n  @Column({ type: 'json', nullable: true })\n  @ManyToMany(() => ChatMember)\n  @JoinTable()\n  members: ChatMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatsController.html":{"url":"controllers/ChatsController.html","title":"controller - ChatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMember\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getMine\n                            \n                            \n                                publishUpdates\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMember(id: string, addUserDto: AddUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(ChatAdminOrOwnerGuard)@Patch('/add/:id')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createChatDto: CreateChatDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChatDto\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMine\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMine(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/mine')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishUpdates\n                        \n                    \n                \n            \n            \n                \npublishUpdates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('/:chatId/getUpdates')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateChatDto: UpdateChatDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateChatDto\n                                    \n                                                UpdateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  UseGuards,\n  UnauthorizedException,\n  Sse,\n} from '@nestjs/common';\nimport { ChatsService } from './chats.service';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { UpdateChatDto } from './dto/update-chat.dto';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { AddUserDto } from './dto/add-user-dto';\nimport { ChatAdminOrOwnerGuard } from './admin.chat.guard';\nimport { map, Observable } from 'rxjs';\nimport { MessageService } from '../message/message.service';\n\ninterface CustomEvent extends MessageEvent {\n  event: string;\n  data: any;\n}\n\n@Controller('chats')\n@UseGuards(AuthGuard)\nexport class ChatsController {\n  constructor(\n    private readonly chatsService: ChatsService,\n    private readonly messageService: MessageService,\n  ) {}\n\n  @Get('/mine')\n  async getMine(@Request() req) {\n    return this.chatsService.getParticipated(Number(req.user.userId));\n  }\n\n  @Post()\n  async create(@Body() createChatDto: CreateChatDto, @Request() req) {\n    createChatDto.ownerId = Number(req.user.userId);\n    return await this.chatsService.create(createChatDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.chatsService.findAll();\n  }\n\n  @Get('/:id')\n  findOne(@Param('id') id: string) {\n    return this.chatsService.findOne(+id);\n  }\n\n  @Patch('/:id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateChatDto: UpdateChatDto,\n    @Request() req,\n  ) {\n    const chat = await this.chatsService.findOne(+id);\n    if (chat.ownerId !== req.user.userId) {\n      throw new UnauthorizedException();\n    }\n    return await this.chatsService.update(+id, updateChatDto);\n  }\n\n  @Delete('/:id')\n  remove(@Param('id') id: string) {\n    return this.chatsService.deleteChat(+id);\n  }\n\n  @Sse('/:chatId/getUpdates')\n  publishUpdates(): Observable> {\n    return new Observable>((subscriber) => {\n      const listener = (payload) => {\n        subscriber.next({ event: 'newMessage', data: payload });\n      };\n\n      this.messageService.messageEmitter.addListener(\n        'messageCreated',\n        listener,\n      );\n\n      return () => {\n        this.messageService.messageEmitter.removeListener(\n          'messageCreated',\n          listener,\n        );\n      };\n    }).pipe(map((eventData: CustomEvent) => ({ ...eventData })));\n  }\n\n  @UseGuards(ChatAdminOrOwnerGuard)\n  @Patch('/add/:id')\n  async addMember(@Param('id') id: string, addUserDto: AddUserDto) {\n    const chat = await this.chatsService.findOne(+id);\n    return await this.chatsService.addMember(\n      addUserDto.user_id,\n      chat.id,\n      addUserDto.admin,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatsModule.html":{"url":"modules/ChatsModule.html","title":"module - ChatsModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChatsModule\n\n\n\ncluster_ChatsModule_exports\n\n\n\ncluster_ChatsModule_providers\n\n\n\ncluster_ChatsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nChatsModule\n\nChatsModule\n\nChatsModule -->\n\nUsersModule->ChatsModule\n\n\n\n\n\nChatsService \n\nChatsService \n\nChatsService  -->\n\nChatsModule->ChatsService \n\n\n\n\n\nChatsService\n\nChatsService\n\nChatsModule -->\n\nChatsService->ChatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chats/chats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ChatsService } from './chats.service';\nimport { ChatsController } from './chats.controller';\nimport { Chat } from './entities/chat.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from '../users/users.module';\nimport { MessageModule } from '../message/message.module';\nimport { Message } from '../message/entities/message.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Chat, Message]),\n    UsersModule,\n    EventEmitterModule.forRoot(),\n    forwardRef(() => MessageModule),\n  ],\n  controllers: [ChatsController],\n  providers: [ChatsService],\n  exports: [ChatsService],\n})\nexport class ChatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatsService.html":{"url":"injectables/ChatsService.html","title":"injectable - ChatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMember\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                deleteChat\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getParticipated\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatsRepository: Repository, messageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/chats/chats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMember(userId: number, chatId: number, admin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chatId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    admin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createChatDto: CreateChatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChatDto\n                                    \n                                                CreateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteChat\n                        \n                    \n                \n            \n            \n                \ndeleteChat(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getParticipated\n                        \n                    \n                \n            \n            \n                \n                    \n                    getParticipated(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateChatDto: UpdateChatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateChatDto\n                                    \n                                                UpdateChatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { UpdateChatDto } from './dto/update-chat.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Chat, ChatMember } from './entities/chat.entity';\nimport { Repository } from 'typeorm';\nimport { Message } from '../message/entities/message.entity';\n\n@Injectable()\nexport class ChatsService {\n  constructor(\n    @InjectRepository(Chat)\n    private chatsRepository: Repository,\n    @InjectRepository(Message)\n    private messageRepository: Repository,\n  ) {}\n  async create(createChatDto: CreateChatDto) {\n    const created = this.chatsRepository.create(createChatDto);\n    return await this.chatsRepository.save(created);\n  }\n\n  async getParticipated(user_id: number) {\n    return await Chat.createQueryBuilder('chat')\n      .leftJoinAndSelect('chat.members', 'member')\n      .where('chat.ownerId = :userId OR member.userId = :userId', {\n        userId: user_id,\n      })\n      .getMany();\n  }\n\n  findAll() {\n    return this.chatsRepository.find();\n  }\n\n  findOne(id: number) {\n    return this.chatsRepository.findOneBy({ id });\n  }\n\n  update(id: number, updateChatDto: UpdateChatDto) {\n    return this.chatsRepository.update({ id }, updateChatDto);\n  }\n\n  deleteChat(id: number) {\n    return this.chatsRepository.delete({ id });\n  }\n\n  async addMember(userId: number, chatId: number, admin: boolean) {\n    const chat = await this.chatsRepository.findOneBy({ id: chatId });\n    const newChatMember = new ChatMember();\n    newChatMember.admin = admin;\n    newChatMember.userId = userId;\n    chat.members.push(newChatMember);\n    return await this.chatsRepository.save(chat);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateChatDto.html":{"url":"classes/CreateChatDto.html","title":"class - CreateChatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateChatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/dto/create-chat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/create-chat.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/create-chat.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/create-chat.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateChatDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n  ownerId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMessageDto.html":{"url":"classes/CreateMessageDto.html","title":"class - CreateMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/dto/create-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chat_id\n                            \n                            \n                                message_text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chat_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/dto/create-message.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message_text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/dto/create-message.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateMessageDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  message_text: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  chat_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomEvent.html":{"url":"interfaces/CustomEvent.html","title":"interface - CustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.controller.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MessageEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  UseGuards,\n  UnauthorizedException,\n  Sse,\n} from '@nestjs/common';\nimport { ChatsService } from './chats.service';\nimport { CreateChatDto } from './dto/create-chat.dto';\nimport { UpdateChatDto } from './dto/update-chat.dto';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { AddUserDto } from './dto/add-user-dto';\nimport { ChatAdminOrOwnerGuard } from './admin.chat.guard';\nimport { map, Observable } from 'rxjs';\nimport { MessageService } from '../message/message.service';\n\ninterface CustomEvent extends MessageEvent {\n  event: string;\n  data: any;\n}\n\n@Controller('chats')\n@UseGuards(AuthGuard)\nexport class ChatsController {\n  constructor(\n    private readonly chatsService: ChatsService,\n    private readonly messageService: MessageService,\n  ) {}\n\n  @Get('/mine')\n  async getMine(@Request() req) {\n    return this.chatsService.getParticipated(Number(req.user.userId));\n  }\n\n  @Post()\n  async create(@Body() createChatDto: CreateChatDto, @Request() req) {\n    createChatDto.ownerId = Number(req.user.userId);\n    return await this.chatsService.create(createChatDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.chatsService.findAll();\n  }\n\n  @Get('/:id')\n  findOne(@Param('id') id: string) {\n    return this.chatsService.findOne(+id);\n  }\n\n  @Patch('/:id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateChatDto: UpdateChatDto,\n    @Request() req,\n  ) {\n    const chat = await this.chatsService.findOne(+id);\n    if (chat.ownerId !== req.user.userId) {\n      throw new UnauthorizedException();\n    }\n    return await this.chatsService.update(+id, updateChatDto);\n  }\n\n  @Delete('/:id')\n  remove(@Param('id') id: string) {\n    return this.chatsService.deleteChat(+id);\n  }\n\n  @Sse('/:chatId/getUpdates')\n  publishUpdates(): Observable> {\n    return new Observable>((subscriber) => {\n      const listener = (payload) => {\n        subscriber.next({ event: 'newMessage', data: payload });\n      };\n\n      this.messageService.messageEmitter.addListener(\n        'messageCreated',\n        listener,\n      );\n\n      return () => {\n        this.messageService.messageEmitter.removeListener(\n          'messageCreated',\n          listener,\n        );\n      };\n    }).pipe(map((eventData: CustomEvent) => ({ ...eventData })));\n  }\n\n  @UseGuards(ChatAdminOrOwnerGuard)\n  @Patch('/add/:id')\n  async addMember(@Param('id') id: string, addUserDto: AddUserDto) {\n    const chat = await this.chatsService.findOne(+id);\n    return await this.chatsService.addMember(\n      addUserDto.user_id,\n      chat.id,\n      addUserDto.admin,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Message.html":{"url":"entities/Message.html","title":"entity - Message","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/entities/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chat_id\n                            \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                message_text\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chat_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message_text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/entities/message.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Message extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column({ nullable: false })\n  userId: number;\n  @Column({ nullable: false })\n  message_text: string;\n  @Column({ nullable: false })\n  chat_id: number;\n  @CreateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n  })\n  public created_at: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n    onUpdate: 'CURRENT_TIMESTAMP(6)',\n  })\n  public updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessageController.html":{"url":"controllers/MessageController.html","title":"controller - MessageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/message.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                message\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMessageDto: CreateMessageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/message/message.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMessageDto\n                                    \n                                                CreateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(chatId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:chat_id')\n                \n            \n\n            \n                \n                    Defined in src/message/message.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chatId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/message/message.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/message/message.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateMessageDto: UpdateMessageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/message/message.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMessageDto\n                                    \n                                                UpdateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { MessageService } from './message.service';\nimport { CreateMessageDto } from './dto/create-message.dto';\nimport { UpdateMessageDto } from './dto/update-message.dto';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { MessageGuard } from './message.guard';\n\n@Controller('message')\n@UseGuards(AuthGuard, MessageGuard)\nexport class MessageController {\n  constructor(private readonly messageService: MessageService) {}\n\n  @Post()\n  async create(@Body() createMessageDto: CreateMessageDto, @Request() req) {\n    return await this.messageService.create(\n      createMessageDto,\n      Number(req.user.userId),\n    );\n  }\n\n  @Get('/:chat_id')\n  async findAll(@Param('chat_id') chatId: string) {\n    return await this.messageService.findAll(Number(chatId));\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return this.messageService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateMessageDto: UpdateMessageDto,\n    @Request() req,\n  ) {\n    return await this.messageService.update(\n      +id,\n      updateMessageDto,\n      Number(req.user.userId),\n    );\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string, @Request() req) {\n    return this.messageService.remove(+id, Number(req.user.userId));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MessageGuard.html":{"url":"guards/MessageGuard.html","title":"guard - MessageGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    MessageGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/message/message.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(chatsService: ChatsService)\n                    \n                \n                        \n                            \n                                Defined in src/message/message.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatsService\n                                                  \n                                                        \n                                                                        ChatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { ChatsService } from '../chats/chats.service';\n\n@Injectable()\nexport class MessageGuard implements CanActivate {\n  constructor(private chatsService: ChatsService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const chatId = request.params.id;\n    const userId = request.user.userId;\n\n    const chat = await this.chatsService.findOne(chatId);\n\n    if (!chat) {\n      // chat not found, deny access\n      throw new HttpException('Invalid chat id', HttpStatus.NOT_FOUND);\n    }\n\n    let found = false;\n\n    if (chat.members) {\n      chat.members.map((mem) => {\n        if (mem.userId === userId) {\n          found = true;\n        }\n      });\n    }\n    if (chat.ownerId === userId) {\n      found = true;\n    }\n    return found;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessageModule.html":{"url":"modules/MessageModule.html","title":"module - MessageModule","body":"\n                   \n\n\n\n\n    Modules\n    MessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_providers\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_MessageModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nMessageModule\n\nMessageModule\n\nMessageModule -->\n\nUsersModule->MessageModule\n\n\n\n\n\nMessageService \n\nMessageService \n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/message/message.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MessageService } from './message.service';\nimport { MessageController } from './message.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from '../users/users.module';\nimport { Message } from './entities/message.entity';\nimport { ChatsModule } from '../chats/chats.module';\nimport { Chat } from '../chats/entities/chat.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Message, Chat]),\n    forwardRef(() => ChatsModule),\n    UsersModule,\n    EventEmitterModule.forRoot(),\n  ],\n  controllers: [MessageController],\n  providers: [MessageService],\n  exports: [MessageService],\n})\nexport class MessageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageRepository: Repository, chatRepository: Repository, messageEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/message/message.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMessageDto: CreateMessageDto, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMessageDto\n                                    \n                                                CreateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(chat_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chat_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number, user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateMessageDto: UpdateMessageDto, user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/message/message.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMessageDto\n                                    \n                                                UpdateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateMessageDto } from './dto/create-message.dto';\nimport { UpdateMessageDto } from './dto/update-message.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Message } from './entities/message.entity';\nimport { Chat } from '../chats/entities/chat.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class MessageService {\n  constructor(\n    @InjectRepository(Message)\n    private messageRepository: Repository,\n    @InjectRepository(Chat)\n    private chatRepository: Repository,\n    readonly messageEmitter: EventEmitter2,\n  ) {}\n\n  async create(createMessageDto: CreateMessageDto, userId: number) {\n    const created = this.messageRepository.create({\n      userId: userId,\n      chat_id: createMessageDto.chat_id,\n      message_text: createMessageDto.message_text,\n    });\n    const saved = await this.messageRepository.save(created);\n    this.messageEmitter.emit('messageCreated', saved);\n    return saved;\n  }\n\n  async findAll(chat_id: number) {\n    const messages = await this.messageRepository.findBy({\n      chat_id: chat_id,\n    });\n    messages.sort((a, b) => a.created_at.getTime() - b.created_at.getTime());\n    return messages;\n  }\n\n  async findOne(id: number) {\n    return await this.messageRepository.findOneBy({\n      id: id,\n    });\n  }\n\n  async update(\n    id: number,\n    updateMessageDto: UpdateMessageDto,\n    user_id: number,\n  ) {\n    return await this.messageRepository.update(\n      {\n        userId: user_id,\n        id: updateMessageDto.message_id,\n      },\n      {\n        message_text: updateMessageDto.message_text,\n      },\n    );\n  }\n\n  async remove(id: number, user_id: number) {\n    const message = await this.messageRepository.findOneBy({\n      id: id,\n    });\n    if (message.userId === user_id) {\n      return await this.messageRepository.remove(message);\n    }\n    const chat = await this.chatRepository.findOneBy({\n      id: message.chat_id,\n    });\n    if (chat.ownerId === user_id) {\n      return await this.messageRepository.remove(message);\n    }\n    for (const member of chat.members) {\n      if (member.userId === user_id && member.admin === true) {\n        return await this.messageRepository.remove(message);\n      }\n    }\n    throw new HttpException(\n      'you do not have permissions to delete this message',\n      HttpStatus.FORBIDDEN,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDTO.html":{"url":"classes/SignInDTO.html","title":"class - SignInDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Get,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UsersService } from '../users/users.service';\nimport { CreateUserDto } from '../users/dto/create-user-dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class SignInDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private userService: UsersService,\n  ) {}\n\n  @Post('register')\n  async register(@Body() registerDto: CreateUserDto) {\n    return await this.userService.create(registerDto);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: SignInDTO) {\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return await this.userService.findOne(req.user.username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateChatDto.html":{"url":"classes/UpdateChatDto.html","title":"class - UpdateChatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateChatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/dto/update-chat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/dto/update-chat.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateChatDto } from './create-chat.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateChatDto extends PartialType(CreateChatDto) {\n  @ApiProperty()\n  @IsNotEmpty()\n  displayPicture: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMessageDto.html":{"url":"classes/UpdateMessageDto.html","title":"class - UpdateMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/dto/update-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/message/dto/update-message.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMessageDto } from './create-message.dto';\n\nexport class UpdateMessageDto extends PartialType(CreateMessageDto) {\n  message_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bio\n                            \n                            \n                                profilePic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user-dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user-dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @ApiProperty()\n  @IsNotEmpty()\n  bio: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  profilePic: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bio\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                profilePic\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, PrimaryGeneratedColumn, Entity } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  name: string;\n  @Column({ unique: true })\n  username: string;\n  @Column()\n  password: string;\n  @Column({ nullable: true })\n  bio: string;\n  @Column({ nullable: true })\n  profilePic: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [TypeOrmModule.forFeature([User])],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user-dto';\nimport * as bcrypt from 'bcrypt';\nimport { UpdateUserDto } from './dto/update-user-dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async findOne(username: string): Promise {\n    return await this.usersRepository.findOneBy({ username });\n  }\n\n  async update(id: number, updateUserDto: UpdateUserDto) {\n    return await this.usersRepository.update({ id }, updateUserDto);\n  }\n\n  async create(user: CreateUserDto) {\n    const salt = await bcrypt.genSalt();\n    user.password = await bcrypt.hash(user.password, salt);\n    const created = this.usersRepository.create(user);\n    return await this.usersRepository.save(created);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            class\n            SignInDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chats/admin.chat.guard.ts\n            \n            guard\n            ChatAdminOrOwnerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chats/chats.controller.ts\n            \n            controller\n            ChatsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/chats/chats.controller.ts\n            \n            interface\n            CustomEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chats/chats.service.ts\n            \n            injectable\n            ChatsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/chats/dto/add-user-dto.ts\n            \n            class\n            AddUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chats/dto/create-chat.dto.ts\n            \n            class\n            CreateChatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chats/dto/update-chat.dto.ts\n            \n            class\n            UpdateChatDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/chats/entities/chat.entity.ts\n            \n            entity\n            Chat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chats/entities/chat.entity.ts\n            \n            entity\n            ChatMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/message/dto/create-message.dto.ts\n            \n            class\n            CreateMessageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/message/dto/update-message.dto.ts\n            \n            class\n            UpdateMessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/message/entities/message.entity.ts\n            \n            entity\n            Message\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/message/message.controller.ts\n            \n            controller\n            MessageController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/message/message.guard.ts\n            \n            guard\n            MessageGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user-dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user-dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/event-emitter : ^1.4.1\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.4.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/throttler : ^4.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @nestjs/websockets : ^9.4.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            helmet : ^6.1.5\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBarta-Chat-Nest\n\nNest based microservice for Barta Chat\n\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ChatsModule\n\n\n\ncluster_ChatsModule_exports\n\n\n\ncluster_ChatsModule_providers\n\n\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_MessageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChatsModule\n\nChatsModule\n\nAppModule -->\n\nChatsModule->AppModule\n\n\n\n\n\nChatsService \n\nChatsService \n\nChatsService  -->\n\nChatsModule->ChatsService \n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nMessageService \n\nMessageService \n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nChatsModule -->\n\nUsersModule->ChatsModule\n\n\n\nMessageModule -->\n\nUsersModule->MessageModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nChatsService\n\nChatsService\n\nChatsModule -->\n\nChatsService->ChatsModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
